[
    { "comando": "git init", "descrizione": "Inizializza un nuovo repository Git nella directory corrente.", "categoria": "Configurazione e informazioni" },
    { "comando": "git clone <url>", "descrizione": "Clona un repository remoto nella macchina locale.", "categoria": "Configurazione e informazioni" },
    { "comando": "git config --global user.name \"Nome\"", "descrizione": "Configura il nome utente globale per Git.", "categoria": "Configurazione e informazioni" },
    { "comando": "git config --global user.email \"email@example.com\"", "descrizione": "Configura l'email globale per Git.", "categoria": "Configurazione e informazioni" },
    { "comando": "git config --list", "descrizione": "Visualizza la configurazione corrente di Git.", "categoria": "Configurazione e informazioni" },
    { "comando": "git status", "descrizione": "Mostra lo stato del repository (file modificati, non tracciati, pronti per il commit, ecc.).", "categoria": "Configurazione e informazioni" },
    { "comando": "git add <file>", "descrizione": "Aggiunge un file all'indice (staging area).", "categoria": "Gestione dei file" },
    { "comando": "git add .", "descrizione": "Aggiunge tutti i file (modificati e nuovi) all'indice.", "categoria": "Gestione dei file" },
    { "comando": "git rm <file>", "descrizione": "Rimuove un file tracciato dal repository e dal disco.", "categoria": "Gestione dei file" },
    { "comando": "git mv <nome_vecchio> <nome_nuovo>", "descrizione": "Rinomina o sposta un file tracciato.", "categoria": "Gestione dei file" },
    { "comando": "git commit -m \"messaggio\"", "descrizione": "Esegue un commit con un messaggio descrittivo.", "categoria": "Commit e cronologia" },
    { "comando": "git commit --amend", "descrizione": "Modifica l'ultimo commit (aggiungendo file o cambiando il messaggio).", "categoria": "Commit e cronologia" },
    { "comando": "git log", "descrizione": "Mostra la cronologia dei commit.", "categoria": "Commit e cronologia" },
    { "comando": "git log --oneline", "descrizione": "Mostra una cronologia compatta, con un commit per riga.", "categoria": "Commit e cronologia" },
    { "comando": "git diff", "descrizione": "Mostra le differenze tra i file modificati e quelli tracciati.", "categoria": "Commit e cronologia" },
    { "comando": "git diff <file>", "descrizione": "Mostra le differenze per un file specifico.", "categoria": "Commit e cronologia" },
    { "comando": "git branch", "descrizione": "Mostra tutti i branch locali.", "categoria": "Branch e unione" },
    { "comando": "git branch <nome>", "descrizione": "Crea un nuovo branch.", "categoria": "Branch e unione" },
    { "comando": "git checkout <branch>", "descrizione": "Passa a un altro branch.", "categoria": "Branch e unione" },
    { "comando": "git switch <branch>", "descrizione": "Alternativa moderna a git checkout.", "categoria": "Branch e unione" },
    { "comando": "git merge <branch>", "descrizione": "Unisce un branch specifico con il branch corrente.", "categoria": "Branch e unione" },
    { "comando": "git branch -d <branch>", "descrizione": "Elimina un branch locale.", "categoria": "Branch e unione" },
    { "comando": "git remote", "descrizione": "Mostra gli URL remoti configurati.", "categoria": "Gestione remota" },
    { "comando": "git remote add origin <url>", "descrizione": "Collega il repository locale a un repository remoto.", "categoria": "Gestione remota" },
    { "comando": "git push", "descrizione": "Invia i commit locali al repository remoto.", "categoria": "Gestione remota" },
    { "comando": "git push -u origin <branch>", "descrizione": "Invia un branch locale e imposta il tracciamento remoto.", "categoria": "Gestione remota" },
    { "comando": "git pull", "descrizione": "Recupera i cambiamenti dal repository remoto e li unisce al branch corrente.", "categoria": "Gestione remota" },
    { "comando": "git fetch", "descrizione": "Recupera i cambiamenti dal repository remoto senza unirli.", "categoria": "Gestione remota" },
    { "comando": "git restore <file>", "descrizione": "Ripristina un file modificato al suo stato tracciato.", "categoria": "Annullamento modifiche" },
    { "comando": "git checkout -- <file>", "descrizione": "Vecchio comando per ripristinare un file.", "categoria": "Annullamento modifiche" },
    { "comando": "git reset HEAD <file>", "descrizione": "Rimuove un file dall'indice (senza cancellarlo).", "categoria": "Annullamento modifiche" },
    { "comando": "git revert <commit>", "descrizione": "Annulla un commit specifico creando un nuovo commit.", "categoria": "Annullamento modifiche" },
    { "comando": "git reset --soft <commit>", "descrizione": "Sposta HEAD indietro mantenendo le modifiche nell'indice.", "categoria": "Annullamento modifiche" },
    { "comando": "git reset --hard <commit>", "descrizione": "Sposta HEAD indietro eliminando tutte le modifiche.", "categoria": "Annullamento modifiche" },
    { "comando": "git tag", "descrizione": "Mostra tutti i tag.", "categoria": "Tag" },
    { "comando": "git tag <nome>", "descrizione": "Crea un nuovo tag.", "categoria": "Tag" },
    { "comando": "git tag -a <nome> -m \"messaggio\"", "descrizione": "Crea un tag annotato.", "categoria": "Tag" },
    { "comando": "git push origin <tag>", "descrizione": "Invia un tag al repository remoto.", "categoria": "Tag" },
    { "comando": "git submodule add <url>", "descrizione": "Aggiunge un submodule al repository.", "categoria": "Submodule" },
    { "comando": "git submodule update --init --recursive", "descrizione": "Inizializza e aggiorna i submodule.", "categoria": "Submodule" },
    { "comando": "git submodule deinit <path>", "descrizione": "Rimuove un submodule dal repository.", "categoria": "Submodule" },
    { "comando": "git stash", "descrizione": "Salva temporaneamente le modifiche non committate.", "categoria": "Strumenti di debug" },
    { "comando": "git stash pop", "descrizione": "Recupera le modifiche salvate con git stash.", "categoria": "Strumenti di debug" },
    { "comando": "git blame <file>", "descrizione": "Mostra la cronologia delle modifiche per ogni riga di un file.", "categoria": "Strumenti di debug" },
    { "comando": "git bisect", "descrizione": "Identifica il commit che ha introdotto un bug.", "categoria": "Strumenti di debug" },
    { "comando": "git show <commit>", "descrizione": "Mostra i dettagli di un commit specifico.", "categoria": "Utilità" },
    { "comando": "git reflog", "descrizione": "Mostra la cronologia delle modifiche a HEAD.", "categoria": "Utilità" },
    { "comando": "git clean -f", "descrizione": "Rimuove file non tracciati dalla directory di lavoro.", "categoria": "Utilità" }
]
